USE FOODIE_FI;
CREATE or replace table NT_SALES
(
PRODUCT_ID INT,
SALE_DATE DATE,
DAILY_SALES DECIMAL (8,2));

INSERT INTO NT_SALES VALUES
(1000, '2000-09-28', 48850.40),
(1000, '2000-09-29', 54500.22),
(1000, '2000-09-30', 36000.07),
(1000, '2000-10-01', 40200.43),
(2000, '2000-09-28', 41888.88),
(2000, '2000-09-29', 48000.00),
(2000, '2000-09-30', 49850.03),
(2000, '2000-10-01', 54850.29),
(3000, '2000-09-28', 61301.77),
(3000, '2000-09-29', 34509.13),
(3000, '2000-09-30', 43868.86),
(3000, '2000-10-01', 28000.00);

SELECT * FROM NT_SALES;

SELECT *,
LEAD(DAILY_SALES,1)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_VALUE,
ROUND((NEXT_VALUE - DAILY_SALES)/DAILY_SALES *100,2) AS NEXT_VALUE_SALES_PERCENT,
LEAD(DAILY_SALES,2)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_SECOND_DAY_SALE,
ROUND((NEXT_SECOND_DAY_SALE - NEXT_VALUE)/NEXT_VALUE *100,2) AS NEXT_SECOND_DAY_SALE_PERCENT,
LEAD(DAILY_SALES,3)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_THIRD_DAY_SALE,
ROUND((NEXT_THIRD_DAY_SALE - NEXT_SECOND_DAY_SALE)/NEXT_SECOND_DAY_SALE *100,2) AS NEXT_THIRD_DAY_SALE_PERCENT
FROM NT_SALES;

--LEAD(DAILY_SALES, -1) = LAG(DAILY_SALES, 1)--

SELECT *,
LEAD(DAILY_SALES,-1)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_VALUE,
LEAD(DAILY_SALES,-2)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_SECOND_DAY_SALE,
LEAD(DAILY_SALES,-3)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_THIRD_DAY_SALE
FROM NT_SALES;

SELECT *,
LEAD(DAILY_SALES,1)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_VALUE,
ROUND((NEXT_VALUE - DAILY_SALES)/DAILY_SALES *100,2) AS NEXT_VALUE_SALES_PERCENT,
LEAD(DAILY_SALES,2)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_SECOND_DAY_SALE,
ROUND((NEXT_SECOND_DAY_SALE - NEXT_VALUE)/NEXT_VALUE *100,2) AS NEXT_SECOND_DAY_SALE_PERCENT,
LEAD(DAILY_SALES,3)OVER(PARTITION BY PRODUCT_ID ORDER BY SALE_DATE) AS NEXT_THIRD_DAY_SALE,
ROUND((NEXT_THIRD_DAY_SALE - NEXT_SECOND_DAY_SALE)/NEXT_SECOND_DAY_SALE *100,2) AS NEXT_THIRD_DAY_SALE_PERCENT
FROM NT_SALES
QUALIFY NEXT_THIRD_DAY_SALE_PERCENT IS NOT NULL;

